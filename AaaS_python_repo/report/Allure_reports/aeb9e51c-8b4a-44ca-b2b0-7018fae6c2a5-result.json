{"name": "verify logging into application", "status": "failed", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'status'", "trace": "self = <FixtureRequest for <Function test_verify_logging_into_application>>, argname = 'pytestbdd_given_user lands on login page'\n\n    def _get_active_fixturedef(\n        self, argname: str\n    ) -> Union[\"FixtureDef[object]\", PseudoFixtureDef[object]]:\n        try:\n>           return self._fixture_defs[argname]\nE           KeyError: 'pytestbdd_given_user lands on login page'\n\n..\\.virtualenvs\\AaaS_python_repo-qOQ6V3NE\\lib\\site-packages\\_pytest\\fixtures.py:589: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\nrequest = <FixtureRequest for <Function test_verify_logging_into_application>>, step = <pytest_bdd.parser.Step object at 0x0000022163AC3C40>, scenario = <pytest_bdd.parser.Scenario object at 0x0000022163AC06A0>\n\n    def _find_step_function(request, step, scenario):\n        \"\"\"Match the step defined by the regular expression pattern.\n    \n        :param request: PyTest request object.\n        :param step: Step.\n        :param scenario: Scenario.\n    \n        :return: Function of the step.\n        :rtype: function\n        \"\"\"\n        name = step.name\n        try:\n            # Simple case where no parser is used for the step\n>           return request.getfixturevalue(get_step_fixture_name(name, step.type))\n\n..\\.virtualenvs\\AaaS_python_repo-qOQ6V3NE\\lib\\site-packages\\pytest_bdd\\scenario.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <FixtureRequest for <Function test_verify_logging_into_application>>, argname = 'pytestbdd_given_user lands on login page'\n\n    def getfixturevalue(self, argname: str) -> Any:\n        \"\"\"Dynamically run a named fixture function.\n    \n        Declaring fixtures via function argument is recommended where possible.\n        But if you can only decide whether to use another fixture at test\n        setup time, you may use this function to retrieve it inside a fixture\n        or test function body.\n    \n        :raises pytest.FixtureLookupError:\n            If the given fixture could not be found.\n        \"\"\"\n>       fixturedef = self._get_active_fixturedef(argname)\n\n..\\.virtualenvs\\AaaS_python_repo-qOQ6V3NE\\lib\\site-packages\\_pytest\\fixtures.py:581: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <FixtureRequest for <Function test_verify_logging_into_application>>, argname = 'pytestbdd_given_user lands on login page'\n\n    def _get_active_fixturedef(\n        self, argname: str\n    ) -> Union[\"FixtureDef[object]\", PseudoFixtureDef[object]]:\n        try:\n            return self._fixture_defs[argname]\n        except KeyError:\n            try:\n>               fixturedef = self._getnextfixturedef(argname)\n\n..\\.virtualenvs\\AaaS_python_repo-qOQ6V3NE\\lib\\site-packages\\_pytest\\fixtures.py:592: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <FixtureRequest for <Function test_verify_logging_into_application>>, argname = 'pytestbdd_given_user lands on login page'\n\n    def _getnextfixturedef(self, argname: str) -> \"FixtureDef[Any]\":\n        fixturedefs = self._arg2fixturedefs.get(argname, None)\n        if fixturedefs is None:\n            # We arrive here because of a dynamic call to\n            # getfixturevalue(argname) usage which was naturally\n            # not known at parsing/collection time.\n            assert self._pyfuncitem.parent is not None\n            parentid = self._pyfuncitem.parent.nodeid\n            fixturedefs = self._fixturemanager.getfixturedefs(argname, parentid)\n            # TODO: Fix this type ignore. Either add assert or adjust types.\n            #       Can this be None here?\n            self._arg2fixturedefs[argname] = fixturedefs  # type: ignore[assignment]\n        # fixturedefs list is immutable so we maintain a decreasing index.\n        index = self._arg2index.get(argname, 0) - 1\n        if fixturedefs is None or (-index > len(fixturedefs)):\n>           raise FixtureLookupError(argname, self)\nE           _pytest.fixtures.FixtureLookupError: ('pytestbdd_given_user lands on login page', <FixtureRequest for <Function test_verify_logging_into_application>>)\n\n..\\.virtualenvs\\AaaS_python_repo-qOQ6V3NE\\lib\\site-packages\\_pytest\\fixtures.py:473: FixtureLookupError\n\nDuring handling of the above exception, another exception occurred:\n\nfeature = <pytest_bdd.parser.Feature object at 0x0000022164A134C0>, scenario = <pytest_bdd.parser.Scenario object at 0x0000022163AC06A0>, request = <FixtureRequest for <Function test_verify_logging_into_application>>\n\n    def _execute_scenario(feature: \"Feature\", scenario: \"Scenario\", request):\n        \"\"\"Execute the scenario.\n    \n        :param feature: Feature.\n        :param scenario: Scenario.\n        :param request: request.\n        :param encoding: Encoding.\n        \"\"\"\n        request.config.hook.pytest_bdd_before_scenario(request=request, feature=feature, scenario=scenario)\n    \n        try:\n            # Execute scenario steps\n            for step in scenario.steps:\n                try:\n>                   step_func = _find_step_function(request, step, scenario)\n\n..\\.virtualenvs\\AaaS_python_repo-qOQ6V3NE\\lib\\site-packages\\pytest_bdd\\scenario.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_verify_logging_into_application>>, step = <pytest_bdd.parser.Step object at 0x0000022163AC3C40>, scenario = <pytest_bdd.parser.Scenario object at 0x0000022163AC06A0>\n\n    def _find_step_function(request, step, scenario):\n        \"\"\"Match the step defined by the regular expression pattern.\n    \n        :param request: PyTest request object.\n        :param step: Step.\n        :param scenario: Scenario.\n    \n        :return: Function of the step.\n        :rtype: function\n        \"\"\"\n        name = step.name\n        try:\n            # Simple case where no parser is used for the step\n            return request.getfixturevalue(get_step_fixture_name(name, step.type))\n        except FixtureLookupError:\n            try:\n                # Could not find a fixture with the same name, let's see if there is a parser involved\n                name = find_argumented_step_fixture_name(name, step.type, request._fixturemanager, request)\n                if name:\n                    return request.getfixturevalue(name)\n                raise\n            except FixtureLookupError:\n>               raise exceptions.StepDefinitionNotFoundError(\n                    f\"Step definition is not found: {step}. \"\n                    f'Line {step.line_number} in scenario \"{scenario.name}\" in the feature \"{scenario.feature.filename}\"'\n                )\nE               pytest_bdd.exceptions.StepDefinitionNotFoundError: Step definition is not found: Given \"user lands on login page\". Line 8 in scenario \"verify logging into application\" in the feature \"C:\\Users\\sasi-auto-py1\\AaaS_python_repo\\tests\\features\\login.feature\"\n\n..\\.virtualenvs\\AaaS_python_repo-qOQ6V3NE\\lib\\site-packages\\pytest_bdd\\scenario.py:86: StepDefinitionNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nrequest = <FixtureRequest for <Function test_verify_logging_into_application>>, _pytest_bdd_example = {}\n\n    @pytest.mark.usefixtures(*args)\n    def scenario_wrapper(request, _pytest_bdd_example):\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n..\\.virtualenvs\\AaaS_python_repo-qOQ6V3NE\\lib\\site-packages\\pytest_bdd\\scenario.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\.virtualenvs\\AaaS_python_repo-qOQ6V3NE\\lib\\site-packages\\pytest_bdd\\scenario.py:140: in _execute_scenario\n    request.config.hook.pytest_bdd_step_func_lookup_error(\n..\\.virtualenvs\\AaaS_python_repo-qOQ6V3NE\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n..\\.virtualenvs\\AaaS_python_repo-qOQ6V3NE\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <allure_pytest_bdd.pytest_bdd_listener.PytestBDDListener object at 0x00000221639D0FD0>, request = <FixtureRequest for <Function test_verify_logging_into_application>>\nfeature = <pytest_bdd.parser.Feature object at 0x0000022164A134C0>, scenario = <pytest_bdd.parser.Scenario object at 0x0000022163AC06A0>, step = <pytest_bdd.parser.Step object at 0x0000022163AC3C40>\nexception = StepDefinitionNotFoundError('Step definition is not found: Given \"user lands on login page\". Line 8 in scenario \"verify logging into application\" in the feature \"C:\\\\Users\\\\sasi-auto-py1\\\\AaaS_python_repo\\\\tests\\\\features\\\\login.feature\"')\n\n    @pytest.hookimpl\n    def pytest_bdd_step_func_lookup_error(self, request, feature, scenario, step, exception):\n        uuid = get_uuid(str(id(step)))\n        with self.lifecycle.update_step(uuid=uuid) as step_result:\n>           step_result.status = Status.BROKEN\nE           AttributeError: 'NoneType' object has no attribute 'status'\n\n..\\.virtualenvs\\AaaS_python_repo-qOQ6V3NE\\lib\\site-packages\\allure_pytest_bdd\\pytest_bdd_listener.py:88: AttributeError"}, "start": 1636543928643, "stop": 1636543928643, "uuid": "0c5018d2-0ce0-e092-d6fc-ebb82520fb64", "historyId": "0c5018d20ce0e092d6fcebb82520fb64", "fullName": "features\\login.feature:verify logging into application", "labels": [{"name": "host", "value": "sasi-auto-py01"}, {"name": "thread", "value": "9492-MainThread"}, {"name": "framework", "value": "pytest-bdd"}, {"name": "language", "value": "cpython3"}, {"name": "feature", "value": "verify login functionality"}]}